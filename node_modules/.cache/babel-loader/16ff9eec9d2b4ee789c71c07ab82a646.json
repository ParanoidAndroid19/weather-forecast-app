{"ast":null,"code":"var _jsxFileName = \"/Users/simranbhake/Desktop/ProjectProgress/weather/src/components/CityInput.js\";\nimport React from 'react';\nimport './CityInput.css';\nimport Switch from \"react-switch\";\n\nclass CityInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false,\n      units: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(checked) {\n    var deg = '';\n\n    if (checked === false) {\n      deg = 'C';\n    } else {\n      deg = 'F';\n    }\n\n    this.setState({\n      checked,\n      units: deg\n    });\n  }\n\n  render() {\n    // console.log(this.state.units)\n    // here e corresponds to the input box (e.target.value) and the key pressed (e.keyCode)\n    const onKlickHandler = async e => {\n      e.persist(); //I don't know what tf is this\n      //both .which and .keyCode do the samething, but some browsers support only one. So here if e.which is true then use that, else use e.keyCode\n\n      const eventKey = e.which ? e.which : e.keyCode; //user input city\n\n      const city = e.target.value; // check if input contains only letters after Enter was pressed, 13 is the code for enter key\n\n      if (eventKey === 13) {\n        // if input consists of only letters\n        if (/^[a-zA-ZäöüÄÖÜß ]+$/.test(city)) {\n          // adding the className loading so that the loading gif is displayed when api call is being made\n          e.target.classList.add('loading'); // if api call returns true, else\n\n          if (await this.props.makeApiCall(city, this.state.units)) e.target.placeholder = 'Enter a City...';else e.target.placeholder = 'City was not found, try again...';\n        } // if input has any numbers\n        else e.target.placeholder = 'Please enter a valid city name...';\n\n        e.target.classList.remove('loading');\n        e.target.value = ''; //making the input box value empty again\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"city-input\",\n      type: \"text\",\n      placeholder: \"Enter a City...\",\n      onKeyPress: onKlickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"C\"), /*#__PURE__*/React.createElement(Switch, {\n      onChange: this.handleChange,\n      checked: this.state.checked,\n      className: \"react-switch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"F\")));\n  }\n\n}\n\nexport default CityInput;","map":{"version":3,"sources":["/Users/simranbhake/Desktop/ProjectProgress/weather/src/components/CityInput.js"],"names":["React","Switch","CityInput","Component","constructor","props","state","checked","units","handleChange","bind","deg","setState","render","onKlickHandler","e","persist","eventKey","which","keyCode","city","target","value","test","classList","add","makeApiCall","placeholder","remove"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACF,OAAD,EAAU;AACpB,QAAII,GAAG,GAAG,EAAV;;AACA,QAAGJ,OAAO,KAAK,KAAf,EAAsB;AAAEI,MAAAA,GAAG,GAAG,GAAN;AAAU,KAAlC,MACK;AAAEA,MAAAA,GAAG,GAAG,GAAN;AAAW;;AAElB,SAAKC,QAAL,CAAc;AAAEL,MAAAA,OAAF;AACZC,MAAAA,KAAK,EAAEG;AADK,KAAd;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP;AACA;AACA,UAAMC,cAAc,GAAG,MAAMC,CAAN,IAAW;AAChCA,MAAAA,CAAC,CAACC,OAAF,GADgC,CACnB;AAEb;;AACA,YAAMC,QAAQ,GAAGF,CAAC,CAACG,KAAF,GAAUH,CAAC,CAACG,KAAZ,GAAoBH,CAAC,CAACI,OAAvC,CAJgC,CAMhC;;AACA,YAAMC,IAAI,GAAGL,CAAC,CAACM,MAAF,CAASC,KAAtB,CAPgC,CAShC;;AACA,UAAIL,QAAQ,KAAK,EAAjB,EAAqB;AACnB;AACA,YAAI,sBAAsBM,IAAtB,CAA2BH,IAA3B,CAAJ,EAAsC;AACpC;AACAL,UAAAA,CAAC,CAACM,MAAF,CAASG,SAAT,CAAmBC,GAAnB,CAAuB,SAAvB,EAFoC,CAIpC;;AACA,cAAI,MAAM,KAAKpB,KAAL,CAAWqB,WAAX,CAAuBN,IAAvB,EAA6B,KAAKd,KAAL,CAAWE,KAAxC,CAAV,EAA0DO,CAAC,CAACM,MAAF,CAASM,WAAT,GAAuB,iBAAvB,CAA1D,KACKZ,CAAC,CAACM,MAAF,CAASM,WAAT,GAAuB,kCAAvB;AACN,SAPD,CAQA;AARA,aASKZ,CAAC,CAACM,MAAF,CAASM,WAAT,GAAuB,mCAAvB;;AAELZ,QAAAA,CAAC,CAACM,MAAF,CAASG,SAAT,CAAmBI,MAAnB,CAA0B,SAA1B;AACAb,QAAAA,CAAC,CAACM,MAAF,CAASC,KAAT,GAAiB,EAAjB,CAdmB,CAcE;AACtB;AACF,KA1BD;;AA4BA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,iBAHd;AAIE,MAAA,UAAU,EAAER,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKL,YADjB;AAEE,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,OAFtB;AAGE,MAAA,SAAS,EAAC,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CAPA,CADF;AAoBD;;AAzEqC;;AA4ExC,eAAeL,SAAf","sourcesContent":["import React from 'react';\nimport './CityInput.css';\nimport Switch from \"react-switch\";\n\nclass CityInput extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      checked: false,\n      units: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(checked) {\n    var deg = ''\n    if(checked === false) { deg = 'C'}\n    else { deg = 'F' }\n\n    this.setState({ checked,\n      units: deg\n    });\n  }\n\n  render() {\n    // console.log(this.state.units)\n    // here e corresponds to the input box (e.target.value) and the key pressed (e.keyCode)\n    const onKlickHandler = async e => {\n      e.persist(); //I don't know what tf is this\n\n      //both .which and .keyCode do the samething, but some browsers support only one. So here if e.which is true then use that, else use e.keyCode\n      const eventKey = e.which ? e.which : e.keyCode;\n\n      //user input city\n      const city = e.target.value;\n\n      // check if input contains only letters after Enter was pressed, 13 is the code for enter key\n      if (eventKey === 13) {\n        // if input consists of only letters\n        if (/^[a-zA-ZäöüÄÖÜß ]+$/.test(city)) {\n          // adding the className loading so that the loading gif is displayed when api call is being made\n          e.target.classList.add('loading');\n\n          // if api call returns true, else\n          if (await this.props.makeApiCall(city, this.state.units)) e.target.placeholder = 'Enter a City...';\n          else e.target.placeholder = 'City was not found, try again...';\n        }\n        // if input has any numbers\n        else e.target.placeholder = 'Please enter a valid city name...';\n\n        e.target.classList.remove('loading');\n        e.target.value = ''; //making the input box value empty again\n      }\n    };\n\n    return (\n      <div>\n      <input\n        className='city-input'\n        type='text'\n        placeholder='Enter a City...'\n        onKeyPress={onKlickHandler}\n      />\n      <label>\n        <span>C</span>\n        <Switch\n          onChange={this.handleChange}\n          checked={this.state.checked}\n          className=\"react-switch\"\n        />\n        <span>F</span>\n      </label>\n      </div>\n    );\n\n  }\n}\n\nexport default CityInput;\n"]},"metadata":{},"sourceType":"module"}