{"ast":null,"code":"var _jsxFileName = \"/Users/simranbhake/Desktop/ProjectProgress/weather/src/components/WeekWeather.js\";\nimport React from 'react';\nimport './WeekWeather.css';\n\nclass WeekWeather extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDayChar = dateISO => {\n      let weekday = new Array(7);\n      weekday[0] = 'Sunday';\n      weekday[1] = 'Monday';\n      weekday[2] = 'Tuesday';\n      weekday[3] = 'Wednesday';\n      weekday[4] = 'Thursday';\n      weekday[5] = 'Friday';\n      weekday[6] = 'Saturday';\n      console.log(new Date(dateISO).getDay()); // getDay() function gives the day number of weekdays\n\n      return weekday[new Date(dateISO).getDay()];\n    };\n  } // returns weekday to a given Date value\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, this.props.date ? this.getDayChar(this.props.day.date) : ''), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.day.icon ? require(`../images/${this.props.day.icon}.svg`) : require('../images/01d.svg'),\n      alt: \"sun\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, Number(Math.round(this.props.day.temp + 'e' + 1) + 'e-' + 1), \"\\xB0C\"));\n  }\n\n}\n\nexport default WeekWeather;","map":{"version":3,"sources":["/Users/simranbhake/Desktop/ProjectProgress/weather/src/components/WeekWeather.js"],"names":["React","WeekWeather","Component","constructor","props","getDayChar","dateISO","weekday","Array","console","log","Date","getDay","render","date","day","icon","require","Number","Math","round","temp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAKlBC,UALkB,GAKLC,OAAO,IAAI;AACtB,UAAIC,OAAO,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAd;AACAD,MAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,QAAb;AACAA,MAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,QAAb;AACAA,MAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,SAAb;AACAA,MAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,WAAb;AACAA,MAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,UAAb;AACAA,MAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,QAAb;AACAA,MAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,UAAb;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,CAASL,OAAT,EAAkBM,MAAlB,EAAZ,EAVsB,CAWtB;;AACA,aAAOL,OAAO,CAAC,IAAII,IAAJ,CAASL,OAAT,EAAkBM,MAAlB,EAAD,CAAd;AACD,KAlBiB;AAEjB,GAHuC,CAKxC;;;AAiBAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKT,KAAL,CAAWU,IAAX,GAAkB,KAAKT,UAAL,CAAgB,KAAKD,KAAL,CAAWW,GAAX,CAAeD,IAA/B,CAAlB,GAAyD,EAA9D,CADF,eAEE;AACE,MAAA,GAAG,EACD,KAAKV,KAAL,CAAWW,GAAX,CAAeC,IAAf,GACIC,OAAO,CAAE,aAAY,KAAKb,KAAL,CAAWW,GAAX,CAAeC,IAAK,MAAlC,CADX,GAEIC,OAAO,CAAC,mBAAD,CAJf;AAME,MAAA,GAAG,EAAC,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAUE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBC,MAAM,CAACC,IAAI,CAACC,KAAL,CAAW,KAAKhB,KAAL,CAAWW,GAAX,CAAeM,IAAf,GAAoB,GAApB,GAAwB,CAAnC,IAAsC,IAAtC,GAA2C,CAA5C,CAA9B,UAVF,CADF;AAcD;;AArCuC;;AAyC1C,eAAepB,WAAf","sourcesContent":["import React from 'react';\nimport './WeekWeather.css';\n\nclass WeekWeather extends React.Component {\n  constructor(props){\n    super(props)\n  }\n\n  // returns weekday to a given Date value\n  getDayChar = dateISO => {\n    let weekday = new Array(7);\n    weekday[0] = 'Sunday';\n    weekday[1] = 'Monday';\n    weekday[2] = 'Tuesday';\n    weekday[3] = 'Wednesday';\n    weekday[4] = 'Thursday';\n    weekday[5] = 'Friday';\n    weekday[6] = 'Saturday';\n\n    console.log(new Date(dateISO).getDay())\n    // getDay() function gives the day number of weekdays\n    return weekday[new Date(dateISO).getDay()];\n  };\n\n\n  render() {\n    return (\n      <div className='weather-box'>\n        <h1>{this.props.date ? this.getDayChar(this.props.day.date) : ''}</h1>\n        <img\n          src={\n            this.props.day.icon\n              ? require(`../images/${this.props.day.icon}.svg`)\n              : require('../images/01d.svg')\n          }\n          alt='sun'\n        />\n        <span className='temp'>{Number(Math.round(this.props.day.temp+'e'+1)+'e-'+1)}Â°C</span>\n      </div>\n    );\n  }\n}\n\n\nexport default WeekWeather;\n"]},"metadata":{},"sourceType":"module"}