{"ast":null,"code":"var _jsxFileName = \"/Users/simranbhake/Desktop/ProjectProgress/weather/src/components/TodayWeather.js\";\nimport React from 'react';\nimport './TodayWeather.css';\n\nclass TodayWeather extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCountry = code => {\n      const {\n        getCode,\n        getName\n      } = require('country-list');\n\n      const fullName = getName(code);\n\n      if (code === 'GB') {\n        return 'UK';\n      } else {\n        return fullName;\n      }\n    };\n\n    this.getDayChar = dayNum => {\n      let weekday = new Array(7);\n      weekday[0] = 'Sunday';\n      weekday[1] = 'Monday';\n      weekday[2] = 'Tuesday';\n      weekday[3] = 'Wednesday';\n      weekday[4] = 'Thursday';\n      weekday[5] = 'Friday';\n      weekday[6] = 'Saturday';\n      return weekday[dayNum];\n    };\n\n    this.convertDate = this.convertDate.bind(this); // this.getCountry = this.getCountry.bind(this)\n  }\n\n  convertDate(dateISO) {\n    const dateObj = new Date(dateISO);\n    const dateTimeFormat = new Intl.DateTimeFormat('en', {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit'\n    });\n    const [{\n      value: month\n    },, {\n      value: day\n    },, {\n      value: year\n    }] = dateTimeFormat.formatToParts(dateObj);\n    var pfix = '';\n    var dateLong = '';\n    var wday = this.getDayChar(dateObj.getDay()); // console.log(dateObj.getDay())\n\n    if (day[1] === '1') {\n      pfix = \"st\";\n    } else if (day[1] === '2') {\n      pfix = \"nd\";\n    } else if (day[1] === '1') {\n      pfix = \"st\";\n    } else {\n      pfix = \"th\";\n    }\n\n    if (day[0] === '0') {\n      dateLong = `${day[1]}${pfix} ${month} ${year}`;\n    } else {\n      dateLong = `${wday} ${day}${pfix} ${month} ${year}`;\n    }\n\n    return dateLong;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      style: {\n        visibility: this.props.city ? 'visible' : 'hidden'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"icon\",\n      src: this.props.data ? require(`../images/${this.props.data.icon}.svg`) : require('../images/01d.svg') // style ensures that the element is visible only when the city is defined\n      ,\n      style: {\n        visibility: this.props.city ? 'visible' : 'hidden',\n        opacity: this.props.city ? '1' : '0' // width: \"700px\",\n        // height: \"700px\"\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"today\",\n      style: {\n        visibility: this.props.city ? 'visible' : 'hidden',\n        opacity: this.props.city ? '1' : '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Today, \", this.props.data ? this.convertDate(this.props.data.date) : ''), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, this.props.data ? Math.round(this.props.data.temp) : 0, \"\\xB0C\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, this.props.data ? this.props.data.weather_desc : ''), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, this.props.data ? this.props.data.maxTemp / this.props.data.minTemp : ''), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, this.props.city, \", \", this.getCountry(this.props.country))));\n  }\n\n}\n\nexport default TodayWeather;","map":{"version":3,"sources":["/Users/simranbhake/Desktop/ProjectProgress/weather/src/components/TodayWeather.js"],"names":["React","TodayWeather","Component","constructor","props","getCountry","code","getCode","getName","require","fullName","getDayChar","dayNum","weekday","Array","convertDate","bind","dateISO","dateObj","Date","dateTimeFormat","Intl","DateTimeFormat","year","month","day","value","formatToParts","pfix","dateLong","wday","getDay","render","visibility","city","data","icon","opacity","date","Math","round","temp","weather_desc","maxTemp","minTemp","country"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './TodayWeather.css'\n\nclass TodayWeather extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.convertDate = this.convertDate.bind(this)\n    // this.getCountry = this.getCountry.bind(this)\n  }\n\n  getCountry = code => {\n    const { getCode, getName } = require('country-list');\n    const fullName = getName(code)\n\n    if(code === 'GB') {return 'UK'}\n    else {return fullName}\n  }\n\n  getDayChar = dayNum => {\n    let weekday = new Array(7);\n    weekday[0] = 'Sunday';\n    weekday[1] = 'Monday';\n    weekday[2] = 'Tuesday';\n    weekday[3] = 'Wednesday';\n    weekday[4] = 'Thursday';\n    weekday[5] = 'Friday';\n    weekday[6] = 'Saturday';\n\n    return weekday[dayNum];\n  };\n\n  convertDate(dateISO) {\n    const dateObj = new Date(dateISO)\n    const dateTimeFormat = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' })\n    const [{ value: month },,{ value: day },,{ value: year }] = dateTimeFormat.formatToParts(dateObj)\n    var pfix = ''\n    var dateLong = ''\n    var wday = this.getDayChar(dateObj.getDay())\n    // console.log(dateObj.getDay())\n\n    if(day[1] === '1') { pfix = \"st\"}\n    else if(day[1] === '2') { pfix = \"nd\"}\n    else if(day[1] === '1') { pfix = \"st\"}\n    else {pfix = \"th\"}\n\n    if(day[0] === '0'){ dateLong = `${day[1]}${pfix} ${month} ${year}`}\n    else { dateLong = `${wday} ${day}${pfix} ${month} ${year}`}\n\n    return dateLong\n  }\n\n  render() {\n    return (\n      <div className=\"main\" style={{visibility: this.props.city ? 'visible' : 'hidden'}}>\n        <img className=\"icon\"\n          src={\n            this.props.data\n              ? require(`../images/${this.props.data.icon}.svg`)\n              : require('../images/01d.svg')\n          }\n          // style ensures that the element is visible only when the city is defined\n          style={{\n            visibility: this.props.city ? 'visible' : 'hidden',\n            opacity: this.props.city ? '1' : '0',\n            // width: \"700px\",\n            // height: \"700px\"\n          }}\n        />\n\n        <div className='today' style={{ visibility: this.props.city ? 'visible' : 'hidden', opacity: this.props.city ? '1' : '0'}}>\n          <p>Today, {this.props.data ? this.convertDate(this.props.data.date) : ''}</p>\n          <h1>{this.props.data ? Math.round(this.props.data.temp) : 0}°C</h1>\n          <p>{this.props.data ? this.props.data.weather_desc : ''}</p>\n          <p>{this.props.data ? this.props.data.maxTemp/this.props.data.minTemp : ''}</p>\n          <p>{this.props.city}, {this.getCountry(this.props.country)}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TodayWeather;\n"]},"metadata":{},"sourceType":"module"}