{"version":3,"sources":["images/01d.svg","images sync /^/.//.*/.svg$","images/01n.svg","images/02d.svg","images/02n.svg","images/03d.svg","images/03n.svg","images/04d.svg","images/04n.svg","images/09d.svg","images/09n.svg","images/10d.svg","images/10n.svg","images/11d.svg","images/11n.svg","images/13d.svg","images/13n.svg","images/50d.svg","images/50n.svg","images/cloudy_moon.svg","images/mspace.jpg","images sync /^/.//.*_bg/.jpg$","images/01d_bg.jpg","images/01n_bg.jpg","images/02d_bg.jpg","images/02n_bg.jpg","images/03d_bg.jpg","images/03n_bg.jpg","images/04d_bg.jpg","images/04n_bg.jpg","images/09d_bg.jpg","images/09n_bg.jpg","images/10d_bg.jpg","images/10n_bg.jpg","images/11d_bg.jpg","images/11n_bg.jpg","images/13d_bg.jpg","images/13n_bg.jpg","images/50d_bg.jpg","images/50n_bg.jpg","components/CityInput.js","components/TodayWeather.js","components/WeekWeather.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","CityInput","props","state","checked","units","onKlickHandler","a","persist","eventKey","which","keyCode","city","target","value","test","classList","add","makeApiCall","placeholder","remove","handleChange","deg","setState","console","log","className","type","onKeyPress","onChange","this","React","Component","TodayWeather","getCountry","require","fullName","getCode","getName","getDayChar","dayNum","weekday","Array","convertDate","bind","dateISO","dateObj","Date","Intl","DateTimeFormat","year","month","day","formatToParts","pfix","wday","getDay","style","visibility","src","data","icon","opacity","date","Number","Math","round","temp","notation","weather_desc","country","WeekWeather","alt","App","updateState","uunits","name","days","nota","dailyData","list","filter","reading","dt_txt","includes","i","push","weather","description","main","minTemp","temp_min","maxTemp","temp_max","fetch","then","resp","json","api_data","cod","Forecast","boxes","slice","key","imgUrl","bgStyle","backgroundImage","backgroundSize","transition","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,iC,iBCA3C,IAAIC,EAAM,CACT,YAAa,EACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,YAAa,GACb,oBAAqB,IAItB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,I,oICxCpBL,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,mCCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3C,IAAIC,EAAM,CACT,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,GAChB,eAAgB,IAIjB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,I,gBCvCpBL,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,mKC6G5Bc,E,kDAxGb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAQ,CACXC,SAAS,EACTC,MAAO,UALO,E,qDA4BR,IAAD,OAGDC,EAAc,uCAAG,WAAMX,GAAN,mBAAAY,EAAA,yDACrBZ,EAAEa,UAGIC,EAAWd,EAAEe,MAAQf,EAAEe,MAAQf,EAAEgB,QAGjCC,EAAOjB,EAAEkB,OAAOC,MAChBT,EAAQ,EAAKF,MAAME,MAGR,KAAbI,EAXiB,qBAaf,2CAAsBM,KAAKH,GAbZ,wBAejBjB,EAAEkB,OAAOG,UAAUC,IAAI,WAfN,SAkBP,EAAKf,MAAMgB,YAAYN,EAAMP,GAlBtB,mCAkB8BV,EAAEkB,OAAOM,YAAc,kBAlBrD,wBAmBZxB,EAAEkB,OAAOM,YAAc,mCAnBX,gCAsBdxB,EAAEkB,OAAOM,YAAc,oCAtBT,QAwBnBxB,EAAEkB,OAAOG,UAAUI,OAAO,WAC1BzB,EAAEkB,OAAOC,MAAQ,GAzBE,4CAAH,sDA6BdO,EAAY,uCAAG,WAAMjB,GAAN,eAAAG,EAAA,yDACfe,EAAM,GACcA,GAAT,IAAZlB,EAA2B,SACjB,WAEb,EAAKmB,SAAS,CAAEnB,UACdC,MAAOiB,KAQN,EAAKpB,MAAMU,KAdK,iCAgBP,EAAKV,MAAMgB,YAAY,EAAKhB,MAAMU,KAAMU,GAhBjC,mCAgBuCE,QAAQC,IAAI,8BAhBnD,wBAiBZD,QAAQC,IAAI,sCAjBA,4CAAH,sDAqBlB,OACE,6BACA,2BACEC,UAAU,aACVC,KAAK,OACLR,YAAY,kBACZS,WAAYtB,IAEd,+BACE,mCACA,kBAAC,IAAD,CACEuB,SAAUR,EACVjB,QAAS0B,KAAK3B,MAAMC,QACpBsB,UAAU,iBAEZ,yC,GAjGgBK,IAAMC,W,eCmFfC,G,wDAnFb,WAAY/B,GAAO,IAAD,8BAChB,cAAMA,IAMRgC,WAAa,SAAArC,GAAQ,MAEUsC,EAAQ,IAC/BC,GAHa,EAEXC,SACSC,EAHE,EAEFA,SACQzC,IAEzB,MAAY,OAATA,EAAuB,KACT,OAATA,EAAuB,MACd,OAATA,EAAuB,cACd,OAATA,EAAuB,cACd,OAATA,EAAuB,SAClBuC,GAjBG,EAoBlBG,WAAa,SAAAC,GACX,IAAIC,EAAU,IAAIC,MAAM,GASxB,OARAD,EAAQ,GAAK,MACbA,EAAQ,GAAK,MACbA,EAAQ,GAAK,MACbA,EAAQ,GAAK,MACbA,EAAQ,GAAK,MACbA,EAAQ,GAAK,MACbA,EAAQ,GAAK,MAENA,EAAQD,IA3Bf,EAAKG,YAAc,EAAKA,YAAYC,KAAjB,gBAHH,E,wDAiCNC,GACV,IAAMC,EAAU,IAAIC,KAAKF,GADN,EAEI,IAAIG,KAAKC,eAAe,KAAM,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAClBC,cAAcP,GAHtE,mBAGHK,EAHG,KAGVrC,MAAyBsC,EAHf,KAGQtC,MAAuBoC,EAH/B,KAGwBpC,MACvCwC,EAAO,GAEPC,EAAOzB,KAAKS,WAAWO,EAAQU,UAWnC,OARqBF,EAAP,MAAXF,EAAI,GAAqB,KACT,MAAXA,EAAI,GAAqB,KACd,MAAXA,EAAI,GAAqB,KACpB,KAEC,MAAXA,EAAI,GAAqB,UAAMA,EAAI,IAAV,OAAeE,EAAf,YAAuBH,EAAvB,YAAgCD,GAC7C,UAAMK,EAAN,YAAcH,GAAd,OAAoBE,EAApB,YAA4BH,EAA5B,YAAqCD,K,+BAOpD,OACE,yBAAKxB,UAAU,OAAO+B,MAAO,CAACC,WAAY5B,KAAK5B,MAAMU,KAAO,UAAY,WACtE,yBAAKc,UAAU,OACbiC,IACE7B,KAAK5B,MAAM0D,KACPzB,MAAQ,YAAaL,KAAK5B,MAAM0D,KAAKC,KAA9B,SACP1B,EAAQ,GAGdsB,MAAO,CACLC,WAAY5B,KAAK5B,MAAMU,KAAO,UAAY,SAC1CkD,QAAShC,KAAK5B,MAAMU,KAAO,IAAM,OAMrC,yBAAKc,UAAU,QAAQ+B,MAAO,CAAEC,WAAY5B,KAAK5B,MAAMU,KAAO,UAAY,SAAUkD,QAAShC,KAAK5B,MAAMU,KAAO,IAAM,MACnH,qCAAWkB,KAAK5B,MAAM0D,KAAO9B,KAAKa,YAAYb,KAAK5B,MAAM0D,KAAKG,MAAQ,IACtE,4BAAKjC,KAAK5B,MAAM0D,KAAOI,OAAOC,KAAKC,MAAMpC,KAAK5B,MAAM0D,KAAKO,KAAhBrC,MAAXmC,OAA+CnC,KAAK5B,MAAM0D,KAAKQ,SAAW,GACxG,uBAAG1C,UAAU,OAAOI,KAAK5B,MAAM0D,KAAO9B,KAAK5B,MAAM0D,KAAKS,aAAe,IACrE,2BAAIvC,KAAK5B,MAAMU,KAAf,KAAuBkB,KAAKI,WAAWJ,KAAK5B,MAAMoE,gB,GA7EjCvC,IAAMC,YCyClBuC,G,wDAxCb,WAAYrE,GAAO,IAAD,8BAChB,cAAMA,IAIRqC,WAAa,SAAAM,GACX,IAAIJ,EAAU,IAAIC,MAAM,GAWxB,OAVAD,EAAQ,GAAK,SACbA,EAAQ,GAAK,SACbA,EAAQ,GAAK,UACbA,EAAQ,GAAK,YACbA,EAAQ,GAAK,WACbA,EAAQ,GAAK,SACbA,EAAQ,GAAK,WAINA,EAAQ,IAAIM,KAAKF,GAASW,WAjBjB,E,qDAsBhB,OACE,yBAAK9B,UAAU,eACb,4BAAKI,KAAK5B,MAAMkD,IAAIW,KAAOjC,KAAKS,WAAWT,KAAK5B,MAAMkD,IAAIW,MAAQ,IAClE,yBACEJ,IACE7B,KAAK5B,MAAMkD,IAAIS,KACX1B,MAAQ,YAAaL,KAAK5B,MAAMkD,IAAIS,KAA7B,SACP1B,EAAQ,GAEdqC,IAAI,QAEN,0BAAM9C,UAAU,QAAQsC,OAAOC,KAAKC,MAAMpC,KAAK5B,MAAMkD,IAAIe,KAAfrC,MAAXmC,OAA8CnC,KAAK5B,MAAMkD,IAAIgB,e,GAlC1ErC,IAAMC,YCwKjByC,G,wDA7Jb,WAAYvE,GAAO,IAAD,8BAChB,cAAMA,IAgBRwE,YAAc,SAACd,EAAMe,GAEnB,IAAM/D,EAAOgD,EAAKhD,KAAKgE,KACjBN,EAAUV,EAAKhD,KAAK0D,QACpBO,EAAO,GACTC,EAAO,QAYiBA,EAAd,aAAXH,EAAgC,QACrB,QAKd,IAFA,IAAMI,EAAYnB,EAAKoB,KAAKC,QAAO,SAAAC,GAAO,OAAIA,EAAQC,OAAOC,SAAS,eAE7DC,EAAE,EAAGA,EAAE,EAAGA,IACjBR,EAAKS,KAAK,CACRvB,KAAMgB,EAAUM,GAAGF,OACnBd,aAAcU,EAAUM,GAAGE,QAAQ,GAAGC,YACtC3B,KAAMkB,EAAUM,GAAGE,QAAQ,GAAG1B,KAC9BM,KAAMY,EAAUM,GAAGI,KAAKtB,KACxBC,SAAUU,EACVY,QAASX,EAAUM,GAAGI,KAAKE,SAC3BC,QAASb,EAAUM,GAAGI,KAAKI,WAI/BrE,QAAQC,IAAImC,GAIZ,EAAKrC,SAAS,CACZX,KAAMA,EACN0D,QAASA,EACTO,KAAMA,EACNxE,MAAOsE,IAGTnD,QAAQC,IAAI,EAAKtB,MAAM0E,OA/DP,EAoElB3D,YApEkB,uCAoEJ,WAAMN,EAAM+D,GAAZ,eAAApE,EAAA,sEAEWuF,MAAM,sDAAD,OAC4BlF,EAD5B,kBA1EhB,mCA0EgB,kBAC2D+D,IACrFoB,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAJR,UAMS,SAJfC,EAFM,QAMCC,IAND,gCAOJ,EAAKzB,YAAYwB,EAAUvB,GAPvB,iCASH,GATG,iCAUE,GAVF,4CApEI,wDAGhB,EAAKxE,MAAQ,CACXS,KAAM,GACN0D,QAAS,GACTjE,MAAO,SAGPwE,KAAM,IAAInC,MAAM,IATF,E,qDAgHR,IAAD,OACD0D,EAAW,WAEf,IAAMC,EAAQ,EAAKlG,MAAM0E,KAAKyB,MAAM,GAAGlH,KAAI,SAAAgE,GAAG,OAE5C,wBAAImD,IAAKnD,EAAIW,MACX,kBAAC,EAAD,CAAaX,IAAKA,QAItB,OAAO,wBAAI1B,UAAU,oBAAoB2E,IASvCG,EAASrE,EAAQ,IAElBL,KAAK3B,MAAMS,OACZ4F,EAASrE,MAAQ,YAAYL,KAAK3B,MAAM0E,KAAK,GAAGhB,KAAhC,aAIlB,IAAM4C,EAAU,CAEdC,gBAAgB,OAAD,OAASF,EAAT,KACfG,eAAgB,QAChBC,WAAY,mBAGd,OACE,yBAAKlF,UAAU,MAAM+B,MAAOgD,GAC1B,4BAAQ/E,UAAU,cAChB,kBAAC,EAAD,CAAWd,KAAMkB,KAAK3B,MAAMS,KAAMP,MAAOyB,KAAK3B,MAAME,MAAOa,YAAaY,KAAKZ,YAAY0B,KAAKd,QAC9F,kBAAC,EAAD,CAAc8B,KAAM9B,KAAK3B,MAAM0E,KAAK,GAAIjE,KAAMkB,KAAK3B,MAAMS,KAAM0D,QAASxC,KAAK3B,MAAMmE,UACnF,kBAAC8B,EAAD,Y,GAvJQrE,IAAMC,YCDJ6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzB,MAAK,SAAA0B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpG,QAAQoG,MAAMA,EAAMC,c","file":"static/js/main.cf9035bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/01d.3077681e.svg\";","var map = {\n\t\"./01d.svg\": 8,\n\t\"./01n.svg\": 27,\n\t\"./02d.svg\": 28,\n\t\"./02n.svg\": 29,\n\t\"./03d.svg\": 30,\n\t\"./03n.svg\": 31,\n\t\"./04d.svg\": 32,\n\t\"./04n.svg\": 33,\n\t\"./09d.svg\": 34,\n\t\"./09n.svg\": 35,\n\t\"./10d.svg\": 36,\n\t\"./10n.svg\": 37,\n\t\"./11d.svg\": 38,\n\t\"./11n.svg\": 39,\n\t\"./13d.svg\": 40,\n\t\"./13n.svg\": 41,\n\t\"./50d.svg\": 42,\n\t\"./50n.svg\": 43,\n\t\"./cloudy_moon.svg\": 44\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10;","module.exports = __webpack_public_path__ + \"static/media/01n.3077681e.svg\";","module.exports = __webpack_public_path__ + \"static/media/02d.144d9a47.svg\";","module.exports = __webpack_public_path__ + \"static/media/02n.144d9a47.svg\";","module.exports = __webpack_public_path__ + \"static/media/03d.8d2c0b2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/03n.8d2c0b2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/04d.5a81a676.svg\";","module.exports = __webpack_public_path__ + \"static/media/04n.5a81a676.svg\";","module.exports = __webpack_public_path__ + \"static/media/09d.a92066b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/09n.a92066b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/10d.810f7538.svg\";","module.exports = __webpack_public_path__ + \"static/media/10n.810f7538.svg\";","module.exports = __webpack_public_path__ + \"static/media/11d.0fc0affe.svg\";","module.exports = __webpack_public_path__ + \"static/media/11n.0fc0affe.svg\";","module.exports = __webpack_public_path__ + \"static/media/13d.dc58368f.svg\";","module.exports = __webpack_public_path__ + \"static/media/13n.dc58368f.svg\";","module.exports = __webpack_public_path__ + \"static/media/50d.1186186b.svg\";","module.exports = __webpack_public_path__ + \"static/media/50n.1186186b.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy_moon.961673a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/mspace.b37e58a8.jpg\";","var map = {\n\t\"./01d_bg.jpg\": 49,\n\t\"./01n_bg.jpg\": 50,\n\t\"./02d_bg.jpg\": 51,\n\t\"./02n_bg.jpg\": 52,\n\t\"./03d_bg.jpg\": 53,\n\t\"./03n_bg.jpg\": 54,\n\t\"./04d_bg.jpg\": 55,\n\t\"./04n_bg.jpg\": 56,\n\t\"./09d_bg.jpg\": 57,\n\t\"./09n_bg.jpg\": 58,\n\t\"./10d_bg.jpg\": 59,\n\t\"./10n_bg.jpg\": 60,\n\t\"./11d_bg.jpg\": 61,\n\t\"./11n_bg.jpg\": 62,\n\t\"./13d_bg.jpg\": 63,\n\t\"./13n_bg.jpg\": 64,\n\t\"./50d_bg.jpg\": 65,\n\t\"./50n_bg.jpg\": 66\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48;","module.exports = __webpack_public_path__ + \"static/media/01d_bg.0fc73ab9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/01n_bg.0fc73ab9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/02d_bg.cec2cf5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/02n_bg.cec2cf5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/03d_bg.7e55e357.jpg\";","module.exports = __webpack_public_path__ + \"static/media/03n_bg.7e55e357.jpg\";","module.exports = __webpack_public_path__ + \"static/media/04d_bg.b188c0a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/04n_bg.b188c0a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/09d_bg.b53fb96b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/09n_bg.b53fb96b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10d_bg.0ad34f23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10n_bg.0ad34f23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/11d_bg.3c43f195.jpg\";","module.exports = __webpack_public_path__ + \"static/media/11n_bg.3c43f195.jpg\";","module.exports = __webpack_public_path__ + \"static/media/13d_bg.beb6b32c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/13n_bg.beb6b32c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/50d_bg.a389b4d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/50n_bg.a389b4d9.jpg\";","import React from 'react';\nimport './CityInput.css';\nimport Switch from \"react-switch\";\n\nclass CityInput extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      checked: false,\n      units: 'metric'\n    };\n\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  // handleChange(checked) {\n  //   var deg = ''\n  //   if(checked === false) { deg = 'metric'}\n  //   else { deg = 'imperial' }\n  //\n  //   this.setState({ checked,\n  //     units: deg\n  //   });\n  //\n  //   if(this.props.city){\n  //     // API is called only if the city is defined\n  //     if (await this.props.makeApiCall(this.props.city, this.state.units)) e.target.placeholder = 'Enter a City...';\n  //     else e.target.placeholder = 'Something went wrong, try again...';\n  //   }\n  //\n  // }\n\n  render() {\n    // console.log(this.state.units)\n    // here e corresponds to the input box (e.target.value) and the key pressed (e.keyCode)\n    const onKlickHandler = async e => {\n      e.persist(); //I don't know what tf is this\n\n      //both .which and .keyCode do the samething, but some browsers support only one. So here if e.which is true then use that, else use e.keyCode\n      const eventKey = e.which ? e.which : e.keyCode;\n\n      //user input city\n      const city = e.target.value;\n      const units = this.state.units\n\n      // check if input contains only letters after Enter was pressed, 13 is the code for enter key\n      if (eventKey === 13) {\n        // if input consists of only letters\n        if (/^[a-zA-ZäöüÄÖÜß ]+$/.test(city)) {\n          // adding the className loading so that the loading gif is displayed when api call is being made\n          e.target.classList.add('loading');\n\n          // if api call returns true, else\n          if (await this.props.makeApiCall(city, units)) e.target.placeholder = 'Enter a City...';\n          else e.target.placeholder = 'City was not found, try again...';\n        }\n        // if input has any numbers\n        else e.target.placeholder = 'Please enter a valid city name...';\n\n        e.target.classList.remove('loading');\n        e.target.value = ''; //making the input box value empty again\n      }\n    };\n\n    const handleChange = async checked => {\n      var deg = ''\n      if(checked === false) { deg = 'metric'}\n      else { deg = 'imperial' }\n\n      this.setState({ checked,\n        units: deg\n      });\n\n      // this.props.units = deg\n\n      // console.log(deg)\n      // console.log(this.props.city)\n\n      if(this.props.city){\n        // API is called only if the city is defined\n        if (await this.props.makeApiCall(this.props.city, deg)) console.log(\"API call made successfully\")\n        else console.log('Something went wrong, try again...');\n      }\n    };\n\n    return (\n      <div>\n      <input\n        className='city-input'\n        type='text'\n        placeholder='Enter a City...'\n        onKeyPress={onKlickHandler}\n      />\n      <label>\n        <span>C</span>\n        <Switch\n          onChange={handleChange}\n          checked={this.state.checked}\n          className=\"react-switch\"\n        />\n        <span>F</span>\n      </label>\n      </div>\n    );\n\n  }\n}\n\nexport default CityInput;\n","import React from 'react';\nimport './TodayWeather.css'\n\nclass TodayWeather extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.convertDate = this.convertDate.bind(this)\n    // this.getCountry = this.getCountry.bind(this)\n  }\n\n  getCountry = code => {\n    // country-list package used\n    const { getCode, getName } = require('country-list');\n    const fullName = getName(code)\n\n    if(code === 'GB') {return 'UK'}\n    else if(code === 'US') {return 'USA'}\n    else if(code === 'KP') {return 'North Korea'}\n    else if(code === 'KR') {return 'South Korea'}\n    else if(code === 'TW') {return 'Taiwan'}\n    else {return fullName}\n  }\n\n  getDayChar = dayNum => {\n    let weekday = new Array(7);\n    weekday[0] = 'Sun';\n    weekday[1] = 'Mon';\n    weekday[2] = 'Tue';\n    weekday[3] = 'Wed';\n    weekday[4] = 'Thu';\n    weekday[5] = 'Fri';\n    weekday[6] = 'Sat';\n\n    return weekday[dayNum];\n  };\n\n  convertDate(dateISO) {\n    const dateObj = new Date(dateISO)\n    const dateTimeFormat = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' })\n    const [{ value: month },,{ value: day },,{ value: year }] = dateTimeFormat.formatToParts(dateObj)\n    var pfix = ''\n    var dateLong = ''\n    var wday = this.getDayChar(dateObj.getDay())\n    // console.log(dateObj.getDay())\n\n    if(day[1] === '1') { pfix = \"st\"}\n    else if(day[1] === '2') { pfix = \"nd\"}\n    else if(day[1] === '1') { pfix = \"st\"}\n    else {pfix = \"th\"}\n\n    if(day[0] === '0'){ dateLong = `${day[1]}${pfix} ${month} ${year}`}\n    else { dateLong = `${wday} ${day}${pfix} ${month} ${year}`}\n\n    return dateLong\n  }\n\n  render() {\n\n    return (\n      <div className=\"main\" style={{visibility: this.props.city ? 'visible' : 'hidden'}}>\n        <img className=\"icon\"\n          src={\n            this.props.data\n              ? require(`../images/${this.props.data.icon}.svg`)\n              : require('../images/01d.svg')\n          }\n          // style ensures that the element is visible only when the city is defined\n          style={{\n            visibility: this.props.city ? 'visible' : 'hidden',\n            opacity: this.props.city ? '1' : '0',\n            // width: \"700px\",\n            // height: \"700px\"\n          }}\n        />\n\n        <div className='today' style={{ visibility: this.props.city ? 'visible' : 'hidden', opacity: this.props.city ? '1' : '0'}}>\n          <p>Today, {this.props.data ? this.convertDate(this.props.data.date) : ''}</p>\n          <h1>{this.props.data ? Number(Math.round(this.props.data.temp+'e'+1)+'e-'+1)+this.props.data.notation : 0}</h1>\n          <p className='des'>{this.props.data ? this.props.data.weather_desc : ''}</p>\n          <p>{this.props.city}, {this.getCountry(this.props.country)}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TodayWeather;\n\n// max / min\n// <p>{this.props.data ? Number(Math.round(this.props.data.maxTemp+'e'+1)+'e-'+1).toString()+' / '+Number(Math.round(this.props.data.minTemp+'e'+1)+'e-'+1).toString() : ''}</p>\n","import React from 'react';\nimport './WeekWeather.css';\n\nclass WeekWeather extends React.Component {\n  constructor(props){\n    super(props)\n  }\n\n  // returns weekday to a given Date value\n  getDayChar = dateISO => {\n    let weekday = new Array(7);\n    weekday[0] = 'Sunday';\n    weekday[1] = 'Monday';\n    weekday[2] = 'Tuesday';\n    weekday[3] = 'Wednesday';\n    weekday[4] = 'Thursday';\n    weekday[5] = 'Friday';\n    weekday[6] = 'Saturday';\n\n    // console.log(dateISO)\n    // getDay() function gives the day number of weekdays\n    return weekday[new Date(dateISO).getDay()];\n  };\n\n\n  render() {\n    return (\n      <div className='weather-box'>\n        <h1>{this.props.day.date ? this.getDayChar(this.props.day.date) : ''}</h1>\n        <img\n          src={\n            this.props.day.icon\n              ? require(`../images/${this.props.day.icon}.svg`)\n              : require('../images/01d.svg')\n          }\n          alt='sun'\n        />\n        <span className='temp'>{Number(Math.round(this.props.day.temp+'e'+1)+'e-'+1)+this.props.day.notation}</span>\n      </div>\n    );\n  }\n}\n\n\nexport default WeekWeather;\n","import React from 'react';\nimport './App.css';\nimport CityInput from './components/CityInput';\nimport TodayWeather from './components/TodayWeather';\nimport WeekWeather from './components/WeekWeather';\n// import Bbackground from './images/mspace.jpg';\n\n// git project https://github.com/erikflowers/weather-icons\nimport 'weather-icons/css/weather-icons.css';\n\nconst API_KEY = \"ef7b3e775066b56ae79afbd0b3068de3\";\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      city: '',\n      country: '',\n      units: 'metric',\n      // days contain today and next 4 days\n      // for each day there is: date, weather_desc, icon, temp\n      days: new Array(5)\n    }\n\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  // creates the day objects and updates the state\n  updateState = (data, uunits) => {\n    // city and country is from the API data, this is done to update the state in App using the data received from API called by CityInput\n    const city = data.city.name;\n    const country = data.city.country;\n    const days = [];\n    var nota = '°C'\n    // const dayIndices = this.getDayIndices(data);\n    //\n    // for (let i = 0; i < 5; i++) {\n    //   days.push({\n    //     date: data.list[dayIndices[i]].dt_txt,\n    //     weather_desc: data.list[dayIndices[i]].weather[0].description,\n    //     icon: data.list[dayIndices[i]].weather[0].icon,\n    //     temp: data.list[dayIndices[i]].main.temp\n    //   });\n    // }\n\n    if(uunits === 'imperial') { nota = '°F' }\n    else { nota = '°C' }\n\n    // This will give us readings for only 06:00pm UTC on each day\n    const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"))\n\n    for (let i=0; i<5; i++) {\n      days.push({\n        date: dailyData[i].dt_txt,\n        weather_desc: dailyData[i].weather[0].description,\n        icon: dailyData[i].weather[0].icon,\n        temp: dailyData[i].main.temp,\n        notation: nota,\n        minTemp: dailyData[i].main.temp_min,\n        maxTemp: dailyData[i].main.temp_max\n      })\n    }\n\n    console.log(data);\n    // console.log(dailyData);\n    // console.log(typeof(days[0].date))\n\n    this.setState({\n      city: city,\n      country: country,\n      days: days,\n      units: uunits\n    });\n\n    console.log(this.state.days)\n  };\n\n  // tries to make an API call with the given city name and triggers state update,\n  // here city and uunits refer to the props updated by the child component CityInput, this is case of Child component passing updated state to parent component\n  makeApiCall = async(city, uunits) => {\n    // this city passed is from the user entered input\n    const api_data = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=${API_KEY}&units=${uunits}`\n    ).then(resp => resp.json());\n\n    if (api_data.cod === '200') {\n      await this.updateState(api_data, uunits);\n      // console.log(this.state.days)\n      return true;\n    } else return false;\n  };\n\n  // This code is not required anymore\n  // returns array with Indices of the next five days in the list\n  // from the API data (every day at 12:00 pm)\n  // I have no idea how the code inside this component works!\n  // getDayIndices = data => {\n  //   let dayIndices = [];\n  //   dayIndices.push(0);\n  //\n  //   let index = 0;\n  //   let tmp = data.list[index].dt_txt.slice(8, 10);\n  //\n  //   for (let i = 0; i < 4; i++) {\n  //     while (\n  //       tmp === data.list[index].dt_txt.slice(8, 10) ||\n  //       data.list[index].dt_txt.slice(11, 13) !== '15'\n  //     ) {\n  //       index++;\n  //     }\n  //     dayIndices.push(index);\n  //     tmp = data.list[index].dt_txt.slice(8, 10);\n  //   }\n  //   return dayIndices;\n  // };\n  //\n  // handleChange(e) {\n  //   this.setState({\n  //     city: e.target.value\n  //   });\n  // }\n\n\n  render() {\n    const Forecast = () => {\n      // slice(1) is equivalent to days[1:], days array consists of 5 days total\n      const boxes = this.state.days.slice(1).map(day => (\n        // console.log(day),\n        <li key={day.date}>\n          <WeekWeather day={day} />\n        </li>\n      ));\n\n      return <ul className='weather-box-list'>{boxes}</ul>;\n    };\n\n    // ./images/mspace.jpg\n    // style={{ backgroundImage: `url(require(\"../images/mspace.jpg\"))`}}\n    // this.state.days[0].icon\n\n    // const test = \"tp\"\n\n    var imgUrl = require('./images/mspace.jpg')\n\n    if(this.state.city){\n      imgUrl = require(`./images/${this.state.days[0].icon}_bg.jpg`)\n    }\n\n    // here we change the background image based on the icons (weather condition)\n    const bgStyle = {\n      // backgroundImage: this.state.city ? `url(/backgrounds/${this.state.days[0].icon}_bg.jpg)` : `url(/backgrounds/mspace.jpg)`,\n      backgroundImage: `url(${imgUrl})`,\n      backgroundSize: 'cover',\n      transition: 'all 2s ease-out'\n    }\n\n    return (\n      <div className=\"App\" style={bgStyle}>\n        <header className=\"App-header\">\n          <CityInput city={this.state.city} units={this.state.units} makeApiCall={this.makeApiCall.bind(this)}/>\n          <TodayWeather data={this.state.days[0]} city={this.state.city} country={this.state.country}/>\n          <Forecast />\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}